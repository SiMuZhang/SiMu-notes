import{_ as i,c as l,o as t,a9 as o}from"./chunks/framework.C1wwyOiq.js";const e="/simu-notes/assets/image.DKKsIIlf.png",s="/simu-notes/assets/image-1.BBt4pdlY.png",g=JSON.parse('{"title":"CSS 知识点","description":"","frontmatter":{},"headers":[],"relativePath":"front/css/index.md","filePath":"front/css/index.md","lastUpdated":1718346708000}'),c={name:"front/css/index.md"},a=o('<h1 id="css-知识点" tabindex="-1">CSS 知识点 <a class="header-anchor" href="#css-知识点" aria-label="Permalink to &quot;CSS 知识点&quot;">​</a></h1><h2 id="说说你对盒子模型的理解" tabindex="-1">说说你对盒子模型的理解 <a class="header-anchor" href="#说说你对盒子模型的理解" aria-label="Permalink to &quot;说说你对盒子模型的理解&quot;">​</a></h2><ul><li><p>标准盒子模型</p><p><img src="'+e+'" alt="alt text"></p><ul><li>盒子总宽度 = width + padding + border + margin;</li><li>盒子总高度 = height + padding + border + margin</li></ul></li></ul><p>也就是，<code>width/height</code> 只是内容高度，不包含 <code>padding</code> 和 <code>border </code>值</p><ul><li><p>怪异盒子模型</p><p><img src="'+s+'" alt="alt text"></p><ul><li><p>盒子总宽度 = width + margin;</p></li><li><p>盒子总高度 = height + margin;</p></li></ul></li></ul><p>也就是，<code>width/height</code> 包含了 <code>padding </code>和 <code>border </code>值</p><h2 id="什么是-bfc" tabindex="-1">什么是 BFC <a class="header-anchor" href="#什么是-bfc" aria-label="Permalink to &quot;什么是 BFC&quot;">​</a></h2><p>先看下 MDN 上关于 BFC 的定义：</p><blockquote><p>块格式化上下文（<code>Block Formatting Context</code>，<code>BFC</code>） 是 Web 页面的可视 CSS 渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。</p></blockquote><p>具有 <code>BFC</code> 特性的元素可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 <code>BFC</code> 具有普通容器所没有的一些特性。</p><h2 id="css-选择器有哪些-优先级分别是什么-哪些属性可以继承" tabindex="-1">css 选择器有哪些？优先级分别是什么？哪些属性可以继承？ <a class="header-anchor" href="#css-选择器有哪些-优先级分别是什么-哪些属性可以继承" aria-label="Permalink to &quot;css 选择器有哪些？优先级分别是什么？哪些属性可以继承？&quot;">​</a></h2><p>关于<code>css</code>属性选择器常用的有：</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li>id 选择器（#box），选择 id 为 box 的元素</li><li>类选择器（.one），选择类名为 one 的所有元素</li><li>标签选择器（div），选择标签为 div 的所有元素</li><li>后代选择器（#box div），选择 id 为 box 元素内部所有的 div 元素</li><li>子选择器（.one&gt;one_1），选择父元素为.one 的所有.one_1 的元素</li><li>相邻同胞选择器（.one+.two），选择紧接在.one 之后的所有.two 元素</li><li>群组选择器（div,p），选择 div、p 的所有元素</li></ol></div><p>相信大家对<code>CSS</code>选择器的优先级都不陌生：</p><blockquote><p>内联 &gt; ID 选择器 &gt; 类选择器 &gt; 标签选择器</p></blockquote><p>在<code>css</code>中，继承是指的是给父元素设置一些属性，后代元素会自动拥有这些属性 关于继承属性，可以分成：</p><div class="tip custom-block"><p class="custom-block-title">字体系列属性</p><ul><li>font:组合字体</li><li>font-family:规定元素的字体系列</li><li>font-weight:设置字体的粗细</li><li>font-size:设置字体的尺寸</li><li>font-style:定义字体的风格</li><li>font-variant:偏大或偏小的字体</li></ul></div><div class="tip custom-block"><p class="custom-block-title">文本系列属性</p><ul><li>text-indent：文本缩进</li><li>text-align：文本水平对齐</li><li>line-height：行高</li><li>word-spacing：增加或减少单词间的空白</li><li>letter-spacing：增加或减少字符间的空白</li><li>text-transform：控制文本大小写</li><li>direction：规定文本的书写方向</li><li>color：文本颜色</li></ul></div><div class="tip custom-block"><p class="custom-block-title">元素可见性</p><p>visibility</p></div><div class="tip custom-block"><p class="custom-block-title">表格布局属性</p><ul><li>caption-side：定位表格标题位置</li><li>border-collapse：合并表格边框</li><li>border-spacing：设置相邻单元格的边框间的距离</li><li>empty-cells：单元格的边框的出现与消失</li><li>table-layout：表格的宽度由什么决定</li></ul></div><div class="tip custom-block"><p class="custom-block-title">列表属性</p><ul><li>list-style-type：文字前面的小点点样式</li><li>list-style-position：小点点位置</li><li>list-style：以上的属性可通过这属性集合</li></ul></div><div class="tip custom-block"><p class="custom-block-title">引用</p><p>quotes：设置嵌套引用的引号类型</p></div><div class="tip custom-block"><p class="custom-block-title">光标属性</p><p>cursor：箭头可以变成需要的形状</p></div><div class="warning custom-block"><p class="custom-block-title">继承中比较特殊的几点：</p><ul><li>a 标签的字体颜色不能被继承</li><li>h1-h6 标签字体的大下也是不能被继承的</li></ul></div>',24),d=[a];function p(n,r,u,m,b,h){return t(),l("div",null,d)}const k=i(c,[["render",p]]);export{g as __pageData,k as default};
