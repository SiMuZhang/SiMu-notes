import{_ as t,c as e,o as l,a9 as o}from"./chunks/framework.C1wwyOiq.js";const m=JSON.parse('{"title":"HTML 知识点","description":"","frontmatter":{},"headers":[],"relativePath":"front/html/index.md","filePath":"front/html/index.md","lastUpdated":1718346708000}'),i={name:"front/html/index.md"},a=o('<h1 id="html-知识点" tabindex="-1">HTML 知识点 <a class="header-anchor" href="#html-知识点" aria-label="Permalink to &quot;HTML 知识点&quot;">​</a></h1><h2 id="什么是-html-与-html5-有什么区别" tabindex="-1">什么是 HTML，与 HTML5 有什么区别 <a class="header-anchor" href="#什么是-html-与-html5-有什么区别" aria-label="Permalink to &quot;什么是 HTML，与 HTML5 有什么区别&quot;">​</a></h2><p><strong>HTML</strong>：超文本标记语言（英语：HyperText Markup Language）是一种用来结构化 Web 网页及其内容的标记语言。</p><p><strong>HTML5</strong>：是 HTML 的新标准，其主要目标是无需任何额外的插件如 Flash、Silverlight 等，就可以传输所有内容。它囊括了动画、视频、丰富的图形用户界面等。</p><p>HTML5 是由万维网联盟（W3C）和 <code>Web Hypertext Application Technology Working Group</code> 合作创建的 HTML 新版本。</p><h2 id="块级元素与行内元素" tabindex="-1">块级元素与行内元素 <a class="header-anchor" href="#块级元素与行内元素" aria-label="Permalink to &quot;块级元素与行内元素&quot;">​</a></h2><p>块级元素（block-level elements）通常会独占一行或多整行，可以对其设置宽度，高度，对齐等属性。常见的块级元素有：</p><ul><li><code>&lt;div&gt;</code>：用于将内容分组。</li><li><code>&lt;p&gt;</code>：用于段落。</li><li><code>&lt;h1&gt;</code>-<code>&lt;h6&gt;</code>：用于标题。</li><li><code>&lt;ul&gt;</code> 和 <code>&lt;ol&gt;</code>：用于无序和有序列表。</li><li><code>&lt;li&gt;</code>：用于列表项。</li><li><code>&lt;table&gt;</code>：用于创建表格。</li></ul><p>HTML 中的行内元素（inline elements）通常用于在一行内显示，不占有独立的区域，仅仅靠自身的字体大小和图像尺寸来支撑结构，一般不可以设置宽度，高度，对齐等属性。常见的行内元素有：</p><ul><li><code>&lt;span&gt;</code>：用于对文本或其他内联元素进行分组或添加样式。</li><li><code>&lt;strong&gt;</code>：表示强调的文本。</li><li><code>&lt;em&gt;</code>：表示斜体强调的文本。</li><li><code>&lt;a&gt;</code>：用于创建超链接。</li><li><code>&lt;img&gt;</code>：用于插入图像。</li><li><code>&lt;input&gt;</code>：用于创建用户输入字段。</li></ul><p>空元素（void elements）是指没有闭合标签的元素。它们在 HTML 中没有内容，只有一个开启标签。常见的空元素有：</p><ul><li><code>&lt;br&gt;</code>：用于插入换行符。</li><li><code>&lt;img&gt;</code>：用于插入图像。</li><li><code>&lt;input&gt;</code>：用于创建用户输入字段。</li><li><code>&lt;meta&gt;</code>：用于指定页面元数据。</li><li><code>&lt;link&gt;</code>：用于引入外部资源。</li><li><code>&lt;hr&gt;</code>：用于创建水平分隔线。</li></ul><h2 id="title-与-h1-的区别、b-与-strong-的区别、i-与-em-的区别" tabindex="-1">title 与 h1 的区别、b 与 strong 的区别、i 与 em 的区别？ <a class="header-anchor" href="#title-与-h1-的区别、b-与-strong-的区别、i-与-em-的区别" aria-label="Permalink to &quot;title 与 h1 的区别、b 与 strong 的区别、i 与 em 的区别？&quot;">​</a></h2><ul><li>title 和 h1 的区别</li></ul><ol><li>用途不同：title 标签用于定义 HTML 文档的标题，通常会显示在浏览器的标签页上或者窗口的标题栏上，对于搜索引擎优化（SEO）也非常重要。而 h1 标签用于表示文档的主标题，通常显示在页面内容区域的顶部。</li><li>所在位置不同：title 标签应该放在 <code>&lt;head&gt;</code> 标签内，而 h1 标签则应该放在 <code>&lt;body&gt;</code> 标签内。</li><li>格式和样式不同：title 标签中的文本通常比较短，并且不需要进行格式化、排版等操作；而 h1 标签中的文本通常比较长，并且需要进行合适的格式化、排版和样式设置，以便使其适应页面布局和设计风格。</li></ol><ul><li>b 和 strong 的区别</li></ul><p>b 标记用于指定文本加粗的外观效果，通常只是为了强调关键词或短语，没有特别强的语义化含义。而 strong 标记则表示文本的强调重点，具有更强的语义化含义，并且可以改变文本的语调和读音等方面。</p><ul><li>i 和 em 的区别</li></ul><p>i 标记用于指定文本斜体的外观效果，通常只是为了强调关键词或短语，没有特别强的语义化含义。而 em 标记则表示文本的重要性，具有更强的语义化含义，并且可以改变文本的语调和读音等方面。</p><h2 id="html5-有哪些新特性" tabindex="-1">HTML5 有哪些新特性？ <a class="header-anchor" href="#html5-有哪些新特性" aria-label="Permalink to &quot;HTML5 有哪些新特性？&quot;">​</a></h2><ul><li><strong>新增语义化标签</strong>：nav、header、footer、aside、section、article</li><li><strong>音频、视频标签</strong>：audio、video</li><li><strong>数据存储</strong>：localStorage、sessionStorage</li><li><code>canvas（画布）</code>、<code>Geolocation（地理定位）</code>、<code>websocket（通信协议）</code></li><li><strong>input 标签新增属性</strong>：placeholder、autocomplete、autofocus、required</li><li><strong>history API</strong><ul><li>go、forward、back、pushstate</li></ul></li></ul><h2 id="html-的元素嵌套规则" tabindex="-1">HTML 的元素嵌套规则 <a class="header-anchor" href="#html-的元素嵌套规则" aria-label="Permalink to &quot;HTML 的元素嵌套规则&quot;">​</a></h2><p>HTML 元素嵌套规则是指 HTML 标签在嵌套时的合法性，即标签嵌套的顺序和层级</p><div class="tip custom-block"><p class="custom-block-title">HTML 元素的嵌套合法性</p><p>HTML 元素嵌套是否合法由标签的语义决定，即标签的语义决定了标签的嵌套规则</p><p>举个 🌰</p><p>在 <code>&lt;h1&gt;</code> 中不能再嵌套 <code>&lt;p&gt;</code>，因为 <code>&lt;p&gt;</code> 是一个段落，而 <code>&lt;h1&gt;</code> 是一个标题，段落不能嵌套在标题中</p></div>',24),c=[a];function d(r,n,s,h,g,p){return l(),e("div",null,c)}const T=t(i,[["render",d]]);export{m as __pageData,T as default};
